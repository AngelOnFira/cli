/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CommonsMatchmakerLobbyJoinInfo : A matchmaker lobby.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CommonsMatchmakerLobbyJoinInfo {
    #[serde(rename = "lobby_id")]
    pub lobby_id: uuid::Uuid,
    #[serde(rename = "region")]
    pub region: Box<crate::models::CommonsMatchmakerLobbyJoinInfoRegion>,
    #[serde(rename = "ports")]
    pub ports: ::std::collections::HashMap<String, crate::models::CommonsMatchmakerLobbyJoinInfoPort>,
    #[serde(rename = "player")]
    pub player: Box<crate::models::CommonsMatchmakerLobbyJoinInfoPlayer>,
}

impl CommonsMatchmakerLobbyJoinInfo {
    /// A matchmaker lobby.
    pub fn new(lobby_id: uuid::Uuid, region: crate::models::CommonsMatchmakerLobbyJoinInfoRegion, ports: ::std::collections::HashMap<String, crate::models::CommonsMatchmakerLobbyJoinInfoPort>, player: crate::models::CommonsMatchmakerLobbyJoinInfoPlayer) -> CommonsMatchmakerLobbyJoinInfo {
        CommonsMatchmakerLobbyJoinInfo {
            lobby_id,
            region: Box::new(region),
            ports,
            player: Box::new(player),
        }
    }
}


