/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CloudAnalyticsLobbySummary : Analyical information about a lobby.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CloudAnalyticsLobbySummary {
    /// A universally unique identifier.
    #[serde(rename = "lobby_id")]
    pub lobby_id: String,
    /// A universally unique identifier.
    #[serde(rename = "lobby_group_id")]
    pub lobby_group_id: String,
    /// A human readable short identifier used to references resources. Different than a `rivet.common#Uuid` because this is intended to be human readable. Different than `rivet.common#DisplayName` because this should not include special characters and be short.
    #[serde(rename = "lobby_group_name_id")]
    pub lobby_group_name_id: String,
    /// A universally unique identifier.
    #[serde(rename = "region_id")]
    pub region_id: String,
    /// RFC3339 timestamp.
    #[serde(rename = "create_ts")]
    pub create_ts: String,
    /// Whether or not this lobby is ready.
    #[serde(rename = "is_ready", skip_serializing_if = "Option::is_none")]
    pub is_ready: Option<bool>,
    /// Whether or not this lobby is idle.
    #[serde(rename = "is_idle", skip_serializing_if = "Option::is_none")]
    pub is_idle: Option<bool>,
    /// Whether or not this lobby is in a closed state.
    #[serde(rename = "is_closed", skip_serializing_if = "Option::is_none")]
    pub is_closed: Option<bool>,
    /// Whether or not this lobby is outdated.
    #[serde(rename = "is_outdated", skip_serializing_if = "Option::is_none")]
    pub is_outdated: Option<bool>,
    /// Unsigned 32 bit integer.
    #[serde(rename = "max_players_normal", skip_serializing_if = "Option::is_none")]
    pub max_players_normal: Option<f64>,
    /// Unsigned 32 bit integer.
    #[serde(rename = "max_players_direct", skip_serializing_if = "Option::is_none")]
    pub max_players_direct: Option<f64>,
    /// Unsigned 32 bit integer.
    #[serde(rename = "max_players_party", skip_serializing_if = "Option::is_none")]
    pub max_players_party: Option<f64>,
    /// Unsigned 32 bit integer.
    #[serde(rename = "total_player_count", skip_serializing_if = "Option::is_none")]
    pub total_player_count: Option<f64>,
    /// Unsigned 32 bit integer.
    #[serde(rename = "registered_player_count", skip_serializing_if = "Option::is_none")]
    pub registered_player_count: Option<f64>,
}

impl CloudAnalyticsLobbySummary {
    /// Analyical information about a lobby.
    pub fn new(lobby_id: String, lobby_group_id: String, lobby_group_name_id: String, region_id: String, create_ts: String) -> CloudAnalyticsLobbySummary {
        CloudAnalyticsLobbySummary {
            lobby_id,
            lobby_group_id,
            lobby_group_name_id,
            region_id,
            create_ts,
            is_ready: None,
            is_idle: None,
            is_closed: None,
            is_outdated: None,
            max_players_normal: None,
            max_players_direct: None,
            max_players_party: None,
            total_player_count: None,
            registered_player_count: None,
        }
    }
}


