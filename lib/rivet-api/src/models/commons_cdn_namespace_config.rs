/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CommonsCdnNamespaceConfig : CDN configuration for a given namespace.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CommonsCdnNamespaceConfig {
    /// Whether or not to allow users to connect to the given namespace via domain name.
    #[serde(rename = "enable_domain_public_auth", skip_serializing_if = "Option::is_none")]
    pub enable_domain_public_auth: Option<bool>,
    /// A list of CDN domains for a given namespace.
    #[serde(rename = "domains")]
    pub domains: Vec<crate::models::CommonsCdnNamespaceDomain>,
    #[serde(rename = "auth_type")]
    pub auth_type: crate::models::CommonsCdnAuthType,
    /// A list of CDN authenticated users for a given namespace.
    #[serde(rename = "auth_user_list")]
    pub auth_user_list: Vec<crate::models::CommonsCdnNamespaceAuthUser>,
}

impl CommonsCdnNamespaceConfig {
    /// CDN configuration for a given namespace.
    pub fn new(domains: Vec<crate::models::CommonsCdnNamespaceDomain>, auth_type: crate::models::CommonsCdnAuthType, auth_user_list: Vec<crate::models::CommonsCdnNamespaceAuthUser>) -> CommonsCdnNamespaceConfig {
        CommonsCdnNamespaceConfig {
            enable_domain_public_auth: None,
            domains,
            auth_type,
            auth_user_list,
        }
    }
}


