/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CommonsCdnNamespaceDomain : A CDN domain for a given namespace.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CommonsCdnNamespaceDomain {
    /// A valid domain name (no protocol).
    #[serde(rename = "domain")]
    pub domain: String,
    /// RFC3339 timestamp.
    #[serde(rename = "create_ts")]
    pub create_ts: String,
    #[serde(rename = "verification_status")]
    pub verification_status: crate::models::CommonsCdnNamespaceDomainVerificationStatus,
    #[serde(rename = "verification_method")]
    pub verification_method: Box<crate::models::CommonsCdnNamespaceDomainVerificationMethod>,
    #[serde(rename = "verification_errors")]
    pub verification_errors: Vec<String>,
}

impl CommonsCdnNamespaceDomain {
    /// A CDN domain for a given namespace.
    pub fn new(domain: String, create_ts: String, verification_status: crate::models::CommonsCdnNamespaceDomainVerificationStatus, verification_method: crate::models::CommonsCdnNamespaceDomainVerificationMethod, verification_errors: Vec<String>) -> CommonsCdnNamespaceDomain {
        CommonsCdnNamespaceDomain {
            domain,
            create_ts,
            verification_status,
            verification_method: Box::new(verification_method),
            verification_errors,
        }
    }
}


