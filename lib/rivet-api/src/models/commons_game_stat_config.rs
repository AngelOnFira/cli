/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CommonsGameStatConfig : A game statistic config.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CommonsGameStatConfig {
    #[serde(rename = "record_id")]
    pub record_id: uuid::Uuid,
    #[serde(rename = "icon_id")]
    pub icon_id: uuid::Uuid,
    #[serde(rename = "format")]
    pub format: crate::models::CommonsGameStatFormatMethod,
    #[serde(rename = "aggregation")]
    pub aggregation: crate::models::CommonsGameStatAggregationMethod,
    #[serde(rename = "sorting")]
    pub sorting: crate::models::CommonsGameStatSortingMethod,
    #[serde(rename = "priority")]
    pub priority: i32,
    #[serde(rename = "display_name")]
    pub display_name: String,
    /// A string appended to the end of a singular game statistic's value. Example: 1 **dollar**.
    #[serde(rename = "postfix_singular", skip_serializing_if = "Option::is_none")]
    pub postfix_singular: Option<String>,
    /// A string appended to the end of a game statistic's value that is not exactly 1. Example: 45 **dollars**.
    #[serde(rename = "postfix_plural", skip_serializing_if = "Option::is_none")]
    pub postfix_plural: Option<String>,
    /// A string appended to the beginning of a singular game statistic's value. Example: **value** 1.
    #[serde(rename = "prefix_singular", skip_serializing_if = "Option::is_none")]
    pub prefix_singular: Option<String>,
    /// A string prepended to the beginning of a game statistic's value that is not exactly 1. Example: **values** 45.
    #[serde(rename = "prefix_plural", skip_serializing_if = "Option::is_none")]
    pub prefix_plural: Option<String>,
}

impl CommonsGameStatConfig {
    /// A game statistic config.
    pub fn new(record_id: uuid::Uuid, icon_id: uuid::Uuid, format: crate::models::CommonsGameStatFormatMethod, aggregation: crate::models::CommonsGameStatAggregationMethod, sorting: crate::models::CommonsGameStatSortingMethod, priority: i32, display_name: String) -> CommonsGameStatConfig {
        CommonsGameStatConfig {
            record_id,
            icon_id,
            format,
            aggregation,
            sorting,
            priority,
            display_name,
            postfix_singular: None,
            postfix_plural: None,
            prefix_singular: None,
            prefix_plural: None,
        }
    }
}


