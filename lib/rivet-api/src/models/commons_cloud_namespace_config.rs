/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CommonsCloudNamespaceConfig : Cloud configuration for a given namespace.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CommonsCloudNamespaceConfig {
    #[serde(rename = "cdn")]
    pub cdn: Box<crate::models::CommonsCdnNamespaceConfig>,
    #[serde(rename = "matchmaker")]
    pub matchmaker: Box<crate::models::CommonsMatchmakerNamespaceConfig>,
    /// KV configuration for a given namespace.
    #[serde(rename = "kv")]
    pub kv: ::std::collections::HashMap<String, serde_json::Value>,
    /// Identity configuration for a given namespace.
    #[serde(rename = "identity")]
    pub identity: ::std::collections::HashMap<String, serde_json::Value>,
}

impl CommonsCloudNamespaceConfig {
    /// Cloud configuration for a given namespace.
    pub fn new(cdn: crate::models::CommonsCdnNamespaceConfig, matchmaker: crate::models::CommonsMatchmakerNamespaceConfig, kv: ::std::collections::HashMap<String, serde_json::Value>, identity: ::std::collections::HashMap<String, serde_json::Value>) -> CommonsCloudNamespaceConfig {
        CommonsCloudNamespaceConfig {
            cdn: Box::new(cdn),
            matchmaker: Box::new(matchmaker),
            kv,
            identity,
        }
    }
}


