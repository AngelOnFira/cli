/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LobbiesServiceFindRequest {
    #[serde(rename = "game_modes")]
    pub game_modes: Vec<String>,
    #[serde(rename = "regions", skip_serializing_if = "Option::is_none")]
    pub regions: Option<Vec<String>>,
    #[serde(rename = "prevent_auto_create_lobby", skip_serializing_if = "Option::is_none")]
    pub prevent_auto_create_lobby: Option<bool>,
    #[serde(rename = "captcha", skip_serializing_if = "Option::is_none")]
    pub captcha: Option<Box<crate::models::CommonsCaptchaConfig>>,
}

impl LobbiesServiceFindRequest {
    pub fn new(game_modes: Vec<String>) -> LobbiesServiceFindRequest {
        LobbiesServiceFindRequest {
            game_modes,
            regions: None,
            prevent_auto_create_lobby: None,
            captcha: None,
        }
    }
}


