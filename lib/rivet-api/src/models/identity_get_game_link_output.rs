/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
#[serde(deny_unknown_fields)]
pub struct IdentityGetGameLinkOutput {
    #[serde(rename = "current_identity")]
    pub current_identity: Box<crate::models::IdentityHandle>,
    #[serde(rename = "game")]
    pub game: Box<crate::models::GameHandle>,
    #[serde(rename = "new_identity")]
    pub new_identity: Box<crate::models::IdentityGetGameLinkNewIdentity>,
    #[serde(rename = "status")]
    pub status: crate::models::IdentityGameLinkStatus,
    #[serde(rename = "watch")]
    pub watch: Box<crate::models::WatchResponse>,
}

impl IdentityGetGameLinkOutput {
    pub fn new(current_identity: crate::models::IdentityHandle, game: crate::models::GameHandle, new_identity: crate::models::IdentityGetGameLinkNewIdentity, status: crate::models::IdentityGameLinkStatus, watch: crate::models::WatchResponse) -> IdentityGetGameLinkOutput {
        IdentityGetGameLinkOutput {
            current_identity: Box::new(current_identity),
            game: Box::new(game),
            new_identity: Box::new(new_identity),
            status,
            watch: Box::new(watch),
        }
    }
}


