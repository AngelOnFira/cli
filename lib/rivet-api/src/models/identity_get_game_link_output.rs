/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct IdentityGetGameLinkOutput {
    #[serde(rename = "status")]
    pub status: crate::models::CommonsGameLinkStatus,
    #[serde(rename = "game")]
    pub game: Box<crate::models::CommonsGameHandle>,
    #[serde(rename = "current_identity")]
    pub current_identity: Box<crate::models::CommonsIdentityHandle>,
    #[serde(rename = "new_identity")]
    pub new_identity: Box<crate::models::IdentityGetGameLinkNewIdentity>,
    #[serde(rename = "watch")]
    pub watch: Box<crate::models::CommonsWatchResponse>,
}

impl IdentityGetGameLinkOutput {
    pub fn new(status: crate::models::CommonsGameLinkStatus, game: crate::models::CommonsGameHandle, current_identity: crate::models::CommonsIdentityHandle, new_identity: crate::models::IdentityGetGameLinkNewIdentity, watch: crate::models::CommonsWatchResponse) -> IdentityGetGameLinkOutput {
        IdentityGetGameLinkOutput {
            status,
            game: Box::new(game),
            current_identity: Box::new(current_identity),
            new_identity: Box::new(new_identity),
            watch: Box::new(watch),
        }
    }
}


