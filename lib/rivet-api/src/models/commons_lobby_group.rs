/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CommonsLobbyGroup : A game mode.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CommonsLobbyGroup {
    /// A human readable short identifier used to references resources. Different than a `rivet.common#Uuid` because this is intended to be human readable. Different than `rivet.common#DisplayName` because this should not include special characters and be short.
    #[serde(rename = "name_id")]
    pub name_id: String,
    /// A list of game mode regions.
    #[serde(rename = "regions")]
    pub regions: Vec<crate::models::CommonsLobbyGroupRegion>,
    /// Unsigned 32 bit integer.
    #[serde(rename = "max_players_normal", skip_serializing_if = "Option::is_none")]
    pub max_players_normal: Option<f64>,
    /// Unsigned 32 bit integer.
    #[serde(rename = "max_players_direct", skip_serializing_if = "Option::is_none")]
    pub max_players_direct: Option<f64>,
    /// Unsigned 32 bit integer.
    #[serde(rename = "max_players_party", skip_serializing_if = "Option::is_none")]
    pub max_players_party: Option<f64>,
    #[serde(rename = "runtime")]
    pub runtime: Box<crate::models::CommonsLobbyGroupRuntime>,
}

impl CommonsLobbyGroup {
    /// A game mode.
    pub fn new(name_id: String, regions: Vec<crate::models::CommonsLobbyGroupRegion>, runtime: crate::models::CommonsLobbyGroupRuntime) -> CommonsLobbyGroup {
        CommonsLobbyGroup {
            name_id,
            regions,
            max_players_normal: None,
            max_players_direct: None,
            max_players_party: None,
            runtime: Box::new(runtime),
        }
    }
}


