/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MatchmakerLobbyJoinInfoPort {
    /// The host for the given port. Will be null if using a port range. 
    #[serde(rename = "host", skip_serializing_if = "Option::is_none")]
    pub host: Option<String>,
    #[serde(rename = "hostname")]
    pub hostname: String,
    #[serde(rename = "is_tls")]
    pub is_tls: bool,
    /// The port number for this lobby. Will be null if using a port range. 
    #[serde(rename = "port", skip_serializing_if = "Option::is_none")]
    pub port: Option<i32>,
    #[serde(rename = "port_range")]
    pub port_range: Box<crate::models::MatchmakerLobbyJoinInfoPortRange>,
}

impl MatchmakerLobbyJoinInfoPort {
    pub fn new(hostname: String, is_tls: bool, port_range: crate::models::MatchmakerLobbyJoinInfoPortRange) -> MatchmakerLobbyJoinInfoPort {
        MatchmakerLobbyJoinInfoPort {
            host: None,
            hostname,
            is_tls,
            port: None,
            port_range: Box::new(port_range),
        }
    }
}


