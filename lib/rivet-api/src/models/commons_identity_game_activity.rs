/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CommonsIdentityGameActivity : The game an identity is currently participating in.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CommonsIdentityGameActivity {
    #[serde(rename = "game")]
    pub game: Box<crate::models::CommonsGameHandle>,
    /// A short activity message about the current game activity.
    #[serde(rename = "message")]
    pub message: String,
    /// JSON data seen by anyone.
    #[serde(rename = "public_metadata", deserialize_with = "Option::deserialize")]
    pub public_metadata: Option<serde_json::Value>,
    /// JSON data seen only by the given identity and their mutual followers.
    #[serde(rename = "mutual_metadata", deserialize_with = "Option::deserialize")]
    pub mutual_metadata: Option<serde_json::Value>,
}

impl CommonsIdentityGameActivity {
    /// The game an identity is currently participating in.
    pub fn new(game: crate::models::CommonsGameHandle, message: String, public_metadata: Option<serde_json::Value>, mutual_metadata: Option<serde_json::Value>) -> CommonsIdentityGameActivity {
        CommonsIdentityGameActivity {
            game: Box::new(game),
            message,
            public_metadata,
            mutual_metadata,
        }
    }
}


