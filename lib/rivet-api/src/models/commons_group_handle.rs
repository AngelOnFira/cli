/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CommonsGroupHandle : A group handle.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CommonsGroupHandle {
    #[serde(rename = "group_id")]
    pub group_id: uuid::Uuid,
    #[serde(rename = "display_name")]
    pub display_name: String,
    /// The URL of this group's avatar image
    #[serde(rename = "avatar_url")]
    pub avatar_url: String,
    #[serde(rename = "external")]
    pub external: Box<crate::models::CommonsGroupExternalLinks>,
    /// Whether or not this group is a developer group.
    #[serde(rename = "is_developer", skip_serializing_if = "Option::is_none")]
    pub is_developer: Option<bool>,
}

impl CommonsGroupHandle {
    /// A group handle.
    pub fn new(group_id: uuid::Uuid, display_name: String, avatar_url: String, external: crate::models::CommonsGroupExternalLinks) -> CommonsGroupHandle {
        CommonsGroupHandle {
            group_id,
            display_name,
            avatar_url,
            external: Box::new(external),
            is_developer: None,
        }
    }
}


