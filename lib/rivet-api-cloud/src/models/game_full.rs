/*
 * Rivet Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GameFull {
    #[serde(rename = "game_id")]
    pub game_id: String,
    #[serde(rename = "create_ts")]
    pub create_ts: i32,
    #[serde(rename = "name_id")]
    pub name_id: String,
    #[serde(rename = "display_name")]
    pub display_name: String,
    #[serde(rename = "developer_team_id")]
    pub developer_team_id: String,
    #[serde(rename = "namespaces")]
    pub namespaces: Vec<crate::models::NamespaceSummary>,
    #[serde(rename = "versions")]
    pub versions: Vec<crate::models::VersionSummary>,
    #[serde(rename = "available_regions", skip_serializing_if = "Option::is_none")]
    pub available_regions: Option<Vec<crate::models::RegionSummary>>,
}

impl GameFull {
    pub fn new(game_id: String, create_ts: i32, name_id: String, display_name: String, developer_team_id: String, namespaces: Vec<crate::models::NamespaceSummary>, versions: Vec<crate::models::VersionSummary>) -> GameFull {
        GameFull {
            game_id,
            create_ts,
            name_id,
            display_name,
            developer_team_id,
            namespaces,
            versions,
            available_regions: None,
        }
    }
}


