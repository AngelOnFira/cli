# Reference: https://eugene-babichenko.github.io/blog/2020/05/09/github-actions-cross-platform-auto-releases/

name: release
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      tag_name: ${{ env.TAG_NAME }}
    steps:
      - name: Read Tag
        shell: bash
        run: |
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "Tag: ${{ env.TAG_NAME }}"
      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.TAG_NAME }}

  build-release:
    name: Build Release
    needs: ['create_release']
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux]
        include:
          - build: linux
            os: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build binary
        run: cargo build --release --bin rivet
      - name: Strip binary
        run: strip "target/release/rivet"
      - name: Build archive
        shell: bash
        run: |
          mkdir -p staging
          cp target/release/rivet staging/rivet
          cd staging
          tar vczf ../rivet.tar.gz .
          echo "ASSET_PATH=rivet.tar.gz" >> $GITHUB_ENV
      - name: Upload release archive
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: rivet_${{ needs.create_release.outputs.tag_name }}_linux_x86_64.tar.gz
          asset_content_type: application/octet-stream

  build-docker:
    name: Build Docker
    runs-on: [ubuntu-20.04]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile.cli
          push: true
          tags: ['ghcr.io/rivet-gg/cli:${{ env.TAG_NAME }}', 'ghcr.io/rivet-gg/cli:latest']

