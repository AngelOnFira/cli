name: release

on:
  release:
    types: [created]

jobs:
  build_binary:
    name: Release ${{ matrix.target }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz
          # - target: x86_64-apple-darwin
          #   archive: zip
          # - target: x86_64-pc-windows-gnu
          #   archive: zip
    steps:
      - name: Checkout repository
        uses: actions/checkout@master

      - name: Compile and release
        uses: rust-build/rust-build.action@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
          SRC_DIR: cli
          PRE_BUILD: apk add --no-cache pkg-config libssl-dev
          MINIFY: 'true'
          TOOLCHAIN_VERSION: 1.63.0

  build_docker:
    name: Release Docker
    runs-on: ubuntu-20.04
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile.cli
          push: true
          tags: 'ghcr.io/rivet-gg/cli:latest,ghcr.io/rivet-gg/cli:${{ github.event.release.tag_name }}'

